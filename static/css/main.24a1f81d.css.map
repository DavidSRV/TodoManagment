{"version":3,"file":"static/css/main.24a1f81d.css","mappings":"6FAGA,OAKI,6BACA,kBAKA,6CAVA,cAOA,eALA,YAIA,UAHA,kBAQA,gCAVA,UAUA,CAEA,kBAEI,wBCTkB,CDQlB,aCNW,CDQX,mBAEA,6CACI,aCVK,CDST,+BACI,aCVK,CCiBjB,kBAEI,wBD7Bc,CC8Bd,kBAGA,6CACA,mBAEA,6BAEI,wBD/BkB,CC8BlB,aD5BW,CC8BX,mBAGJ,yBAGI,gCADA,gBAEA,mBAHA,UAGA,CCrCJ,wBDiCA,yBAOQ,gBACA,mBAGJ,oCACI,gCAIJ,0CAGI,mBAFA,aACA,YAEA,8BACA,eCtDR,wBDiDI,0CAQQ,iBAGJ,uDAGI,mBADA,aAEA,SACA,iBAEA,qEAII,yBACA,kBACA,eAHA,YAIA,kBALA,UAKA,CAEA,2EACI,qCAKR,gFAII,yDAzEhB,mBAHA,kBAIA,eALA,cA2EgB,aAxEhB,YAyEgB,qBA1EhB,UA2EgB,CAKA,sFAEI,cADA,4BDlGJ,CC0GR,0DAEI,eADA,UACA,CAEA,gEAEI,cADA,iDACA,CAOhB,mCAGI,mBAGA,gCAJA,aADA,aAGA,uBACA,aAEA,0CAEA,sCACI,kBAIR,qCAII,mBAEA,cAJA,aADA,YAEA,8BAEA,iBDnIS,CCsIT,yDACI,gBACA,0CAIJ,oDACI,aACA,gBACA,SChJR,wBD6II,oDAMQ,cAIJ,iEA/JR,eACA,gBACA,0CASA,yJACI,aDhBK,CCuKD,oEAnKR,eACA,gBACA,0CASA,+JACI,aDhBK,CC2KD,uEAvKR,eACA,gBACA,0CASA,qKACI,aDhBK,CCiLL,oDA7KJ,eA8KQ,gBA7KR,gBACA,0CASA,+HACI,aDhBK,CC2Lb,OAEI,aEzLJ,YFwLI,iBEhLA,CARJ,KAEI,mBADA,aAIA,aAFA,uBACA,WAGA,UACA,CAEA,qBAFA,+BAII,CAFJ,gBACI,wBACA,CAGJ,sBAMI,2FAEA,4BACA,sBAEA,CAPA,aAHA,kBACA,MASA,+BACI,CATJ,WAEA,aAOI,4HASJ,gCAEA,sBAIA,YDlCJ,sBC0BA,UAOI,eACA,CAFA,eACA,CAPJ,iBAWQ,CACA,SAPJ,WAOI,yBAEA,qBAIJ,gBAEI,CAFJ,gBAEI,YACA,CAHJ,aAGI,8CAIA,mBAFA,YAEA,8BACI,YACA,oDACA,aAGJ,8DACI,yDAEA,cACI,+DAQhB,4BAEI,qBAEA,qBAIA,wBACI,CADJ,kBH/EkB,aGmFlB,CAPA,aAGA,SAHA,sBAOA,gCFzFJ,wBAEA,gDAII,yCACI,iBAIR,CEkFI,yFF5FJ,aACA,mDAII,0DAKJ,CEsFI,+FFhGJ,qDACA,cAII,0DACI,CDXC,mHIGb,EACI,sBAIJ,UAGI,yBADA,SADA,SJLqB,CEoCzB,KACI","sources":["style/compSytle/_TaskFormStyle.scss","style/_colors.scss","style/compSytle/_TaskListStyle.scss","style/style.scss","style/compSytle/_AppStyle.scss","style/_resets.scss"],"sourcesContent":["@use '../colors' as *;\r\n@use '../style.scss' as *;\r\n\r\n.input {\r\n    display: block;\r\n    width: 100%;\r\n    height: 50px;\r\n    padding: 10px 20px;\r\n    border: 1px solid transparent;\r\n    border-radius: 5px;\r\n    outline: 0;\r\n    font-size: 1rem;\r\n    -webkit-box-shadow: 2px 3px 25px -8px rgba(0, 0, 0, 0.75);\r\n    -moz-box-shadow: 2px 3px 25px -8px rgba(0, 0, 0, 0.75);\r\n    box-shadow: 2px 3px 25px -8px rgba(0, 0, 0, 0.75);\r\n    transition: background-color 0.6s;\r\n    \r\n    &.--darkMode{\r\n        color: $LightGrayishBlue;\r\n        background-color: $VeryDarkDesaturatedBlue;\r\n        transition: all 0.6s;\r\n\r\n        &::placeholder{\r\n            color: $DarkGrayishBlue;\r\n        }\r\n\r\n    }\r\n\r\n}","$BrightBlue: hsl(220, 98%, 61%);\r\n$CheckBackground: linear-gradient hsl(192, 100%, 67%) to hsl(280, 87%, 65%);\r\n\r\n$LTVeryLightGray: hsl(0, 0%, 98%);\r\n$LTVeryLightGrayishBlue: hsl(236, 33%, 92%);\r\n$LTLightGrayishwBlue: hsl(233, 11%, 84%);\r\n$LTDarkGrayishBlue: hsl(236, 9%, 61%);\r\n$LTVeryDarkGrayishBlue: hsl(235, 19%, 35%);\r\n\r\n$VeryDarkBlue: hsl(234, 24%, 8%);\r\n$VeryDarkDesaturatedBlue: hsl(235, 24%, 19%);\r\n$LightGrayishBlue: hsl(234, 39%, 85%);\r\n$LightGrayishBlue: hsl(236, 33%, 92%); //HOVER\r\n$DarkGrayishBlue:hsl(234, 11%, 52%);\r\n$VeryDarkGrayishBlue: hsl(233, 14%, 35%);\r\n$VeryDarkGrayishBlue: hsl(237, 14%, 26%)","@use '../colors' as *;\r\n@use '../style.scss' as *;\r\n\r\n@mixin inputState {\r\n    cursor: pointer;\r\n    font-weight: 700;\r\n    user-select: none;\r\n\r\n    &.--darkMode {\r\n\r\n        &:hover {\r\n            color: $BrightBlue;\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        color: $BrightBlue;\r\n    }\r\n}\r\n\r\n@mixin inputComplete($type) {\r\n    display: block;\r\n    border-radius: 50%;\r\n    width: 20px;\r\n    height: 20px;\r\n    border: 1px $type $LTDarkGrayishBlue;\r\n    cursor: pointer;\r\n\r\n}\r\n\r\n.containerGeneral {\r\n\r\n    background-color: $LTVeryLightGray;\r\n    border-radius: 5px;\r\n    -webkit-box-shadow: 2px 3px 25px -8px rgba(0, 0, 0, 0.75);\r\n    -moz-box-shadow: 2px 3px 25px -8px rgba(0, 0, 0, 0.75);\r\n    box-shadow: 2px 3px 25px -8px rgba(0, 0, 0, 0.75);\r\n    transition: all 0.6s;\r\n\r\n    &.--darkMode {\r\n        color: $LightGrayishBlue;\r\n        background-color: $VeryDarkDesaturatedBlue;\r\n        transition: all 0.6s;\r\n    }\r\n\r\n    .tasks {\r\n        width: 100%;\r\n        min-width: 400px;\r\n        border-bottom: 1px solid $LTLightGrayishwBlue;\r\n        transition: all 0.6s;\r\n\r\n        @include for-size(small) {\r\n            max-width: 400px;\r\n            min-width: inherit;\r\n        }\r\n\r\n        &.--darkMode {\r\n            border-bottom: 1px solid $VeryDarkGrayishBlue;\r\n\r\n        }\r\n\r\n        & .task__container {\r\n            display: flex;\r\n            height: 60px;\r\n            align-items: center;\r\n            justify-content: space-between;\r\n            padding: 0 20px;\r\n\r\n            @include for-size(small){\r\n                max-width: 380px;\r\n            }\r\n\r\n            & .task__group {\r\n\r\n                display: flex;\r\n                align-items: center;\r\n                gap: 15px;\r\n                overflow: overlay;\r\n\r\n                & .task__select {\r\n\r\n                    width: 20px;\r\n                    height: 20px;\r\n                    border: 1px solid $DarkGrayishBlue;\r\n                    border-radius: 50%;\r\n                    cursor: pointer;\r\n                    position: relative;\r\n\r\n                    &:hover {\r\n                        border: 1px solid #bf58f3cc;\r\n                    }\r\n\r\n                }\r\n\r\n                & .task__containerComplete {\r\n                    @include inputComplete(transparent);\r\n                    display: grid;\r\n                    place-content: center;\r\n                    background-image: linear-gradient(to left, #56DDFF, #BF58F3);\r\n                }\r\n\r\n                & .task__description {\r\n\r\n                    &.--completed {\r\n                        text-decoration: line-through;\r\n                        color: $LTDarkGrayishBlue;\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n            & .task__closeimg {\r\n                width: 15px;\r\n                cursor: pointer;\r\n\r\n                &:hover {\r\n                    transform: scale(1.2);\r\n                    display: block;\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    & .Container0Tasks {\r\n        height: 150px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        padding: 20px;\r\n        border-bottom: 1px solid $LightGrayishBlue;\r\n        user-select: none;\r\n\r\n        & h1 {\r\n            text-align: center;\r\n        }\r\n    }\r\n\r\n    & .inputs__container {\r\n        height: 50px;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        padding: 10px 15px;\r\n        color: $DarkGrayishBlue;\r\n\r\n        & .inputs__taskLength {\r\n            font-size: 0.8rem;\r\n            user-select: none;\r\n\r\n        }\r\n\r\n        & .inputs__state {\r\n            display: flex;\r\n            font-size: 0.8rem;\r\n            gap: 10px;\r\n\r\n            @include for-size(small) {\r\n                display: none;\r\n            }\r\n\r\n\r\n            & .inputs__all {\r\n                @include inputState()\r\n            }\r\n\r\n            & .inputs__active {\r\n                @include inputState()\r\n            }\r\n\r\n            & .inputs__completed {\r\n                @include inputState()\r\n            }\r\n\r\n        }\r\n\r\n        & .inputs__clear {\r\n            font-size: 0.8rem;\r\n\r\n            @include inputState()\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n.alert {\r\n    position: relative;\r\n    bottom: 100px;\r\n\r\n}","@use './resets';\r\n\r\n$small: 'small';\r\n$medium: 'medium';\r\n$large: 'large';\r\n\r\n$screen-small-max: 500px;\r\n$screen-medium-max: 1024px;\r\n$screen-large-max: 1440px;\r\n\r\n@mixin for-size($size) {\r\n  @if $size == $small {\r\n    @media (max-width: $screen-small-max) {\r\n      @content;\r\n    }\r\n  } @else if $size == $medium {\r\n    @media (max-width: $screen-medium-max) {\r\n      @content;\r\n    }\r\n  } @else if $size == $large {\r\n    @media (max-width: $screen-large-max) {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin for-custom-size($screen, $is-min-width: true) {\r\n  $prefix: if($is-min-width, 'min', 'max');\r\n\r\n  @media (#{$prefix}-width: #{$screen}) {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin for-custom-size-range($screen-min, $screen-max) {\r\n  @media (min-width: #{$screen-min}) and (max-width: #{$screen-max}) {\r\n    @content;\r\n  }\r\n}\r\n\r\nbody {\r\n    font-family: 'Josefin Sans', sans-serif;\r\n}","@use '../colors' as *;\r\n@use '../style.scss' as *;\r\n@use '../compSytle/TaskListStyle' as *;\r\n\r\n.App {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 100vh;\r\n    position: relative;\r\n    z-index: 10;\r\n    transition: background-color 0.6s;\r\n\r\n    &.--darkMode {\r\n        background-color: $VeryDarkBlue;\r\n        transition: background-color 0.6s;\r\n    }\r\n\r\n    & .App__background {\r\n        position: absolute;\r\n        top: 0;\r\n        width: 100%;\r\n        height: 300px;\r\n        z-index: -1000;\r\n        background-image: url('../../assets/images/bg-desktop-light.jpg');\r\n        background-repeat: no-repeat;\r\n        background-size: cover;\r\n        transition: background-image 0.6s;\r\n\r\n        &.--darkMode {\r\n            background-image: url('../../assets/images/bg-desktop-dark.jpg');\r\n            transition: background-image 0.6s;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    & .App__container {\r\n        width: 500px;\r\n        min-width: 360px;\r\n        margin-top: 40px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 20px;\r\n        position: absolute;\r\n        top: 30px;\r\n\r\n        @include for-size(small) {\r\n            width: inherit;\r\n            max-width: 400px;\r\n            margin: 40px 10px;\r\n            padding: 15px;\r\n\r\n        }\r\n\r\n        .container__titleInput {\r\n\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: space-between;\r\n            z-index: 100;\r\n\r\n            & .title {\r\n                color: $LTVeryLightGray;\r\n                letter-spacing: 10px;\r\n                user-select: none;\r\n            }\r\n\r\n            & .inputTheme {\r\n                cursor: pointer;\r\n\r\n                &:hover {\r\n                    transform: scale(1.2);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    & .inputs__state {\r\n        display: flex;\r\n        justify-content: center;\r\n        gap: 15px;\r\n        border-radius: 5px;\r\n        background-color: $LTVeryLightGray;\r\n        color: $DarkGrayishBlue;\r\n\r\n        &.--darkMode {\r\n            background-color: $VeryDarkDesaturatedBlue;\r\n        }\r\n\r\n        & .inputs__all {\r\n            @include inputState()\r\n        }\r\n\r\n        & .inputs__active {\r\n            @include inputState()\r\n        }\r\n\r\n        & .inputs__completed {\r\n            @include inputState()\r\n        }\r\n\r\n    }\r\n\r\n}","@import url('https://fonts.googleapis.com/css2?family=Josefin+Sans:wght@400;700&display=swap');\r\n@import './colors';\r\n\r\n*{\r\n    box-sizing: border-box;\r\n  \r\n}\r\n\r\nhtml,body{\r\n    padding: 0;\r\n    margin: 0;\r\n    background-color: $LTVeryLightGrayishBlue;\r\n\r\n}\r\n"],"names":[],"sourceRoot":""}