@use '../colors' as *;
@use '../style.scss' as *;

@mixin inputState {
    cursor: pointer;
    font-weight: 700;
    user-select: none;

    &.--darkMode {

        &:hover {
            color: $BrightBlue;
        }
    }

    &:hover {
        color: $BrightBlue;
    }
}

@mixin inputComplete($type) {
    display: block;
    border-radius: 50%;
    width: 20px;
    height: 20px;
    border: 1px $type $LTDarkGrayishBlue;
    cursor: pointer;

}

.containerGeneral {

    background-color: $LTVeryLightGray;
    border-radius: 5px;
    -webkit-box-shadow: 2px 3px 25px -8px rgba(0, 0, 0, 0.75);
    -moz-box-shadow: 2px 3px 25px -8px rgba(0, 0, 0, 0.75);
    box-shadow: 2px 3px 25px -8px rgba(0, 0, 0, 0.75);
    transition: all 0.6s;

    &.--darkMode {
        color: $LightGrayishBlue;
        background-color: $VeryDarkDesaturatedBlue;
        transition: all 0.6s;
    }

    .tasks {
        width: 100%;
        min-width: 400px;
        border-bottom: 1px solid $LTLightGrayishwBlue;
        transition: all 0.6s;

        @include for-size(small) {
            max-width: 400px;
            min-width: inherit;
        }

        &.--darkMode {
            border-bottom: 1px solid $VeryDarkGrayishBlue;

        }

        & .task__container {
            display: flex;
            height: 60px;
            align-items: center;
            justify-content: space-between;
            padding: 0 20px;

            @include for-size(small){
                max-width: 380px;
            }

            & .task__group {

                display: flex;
                align-items: center;
                gap: 15px;
                overflow: overlay;

                & .task__select {

                    width: 20px;
                    height: 20px;
                    border: 1px solid $DarkGrayishBlue;
                    border-radius: 50%;
                    cursor: pointer;
                    position: relative;

                    &:hover {
                        border: 1px solid #bf58f3cc;
                    }

                }

                & .task__containerComplete {
                    @include inputComplete(transparent);
                    display: grid;
                    place-content: center;
                    background-image: linear-gradient(to left, #56DDFF, #BF58F3);
                }

                & .task__description {

                    &.--completed {
                        text-decoration: line-through;
                        color: $LTDarkGrayishBlue;
                    }

                }

            }

            & .task__closeimg {
                width: 15px;
                cursor: pointer;

                &:hover {
                    transform: scale(1.2);
                    display: block;
                }
            }

        }
    }

    & .Container0Tasks {
        height: 150px;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 20px;
        border-bottom: 1px solid $LightGrayishBlue;
        user-select: none;

        & h1 {
            text-align: center;
        }
    }

    & .inputs__container {
        height: 50px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px 15px;
        color: $DarkGrayishBlue;

        & .inputs__taskLength {
            font-size: 0.8rem;
            user-select: none;

        }

        & .inputs__state {
            display: flex;
            font-size: 0.8rem;
            gap: 10px;

            @include for-size(small) {
                display: none;
            }


            & .inputs__all {
                @include inputState()
            }

            & .inputs__active {
                @include inputState()
            }

            & .inputs__completed {
                @include inputState()
            }

        }

        & .inputs__clear {
            font-size: 0.8rem;

            @include inputState()
        }

    }

}

.alert {
    position: relative;
    bottom: 100px;

}